// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Polygon

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
int vertices;
float ressolution;
float falloff;
float size;
bool rounded;

#define PI 3.14159265358979323846
#define TWO_PI 6.28318530718
[numthreads(8,8,1)]
void Polygon(uint3 id : SV_DispatchThreadID)
{
	float2 st = id.xy / ressolution;
	float3 color = float3(0, 0, 0);
	float d = 0.0;

	st = st * 2.0 - 1.0;

	float a = atan2(st.x, st.y) + PI;
	float r = TWO_PI / float(vertices);
	float c = 0.0;

	if (rounded)
	{
		d = cos(floor(0.5 + a / r)*r - a) - length(st);
		c = smoothstep(size, size + falloff, d);
	}
	else
	{
		d = cos(floor(0.5 + a / r)*r - a) * length(st);
		c = 1.0 - smoothstep(size, size + falloff, d);
	}

	color = float3(c,c,c);
    Result[id.xy] = float4(color, 1.0);
}
