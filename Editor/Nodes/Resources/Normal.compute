// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Normal

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
RWTexture2D<float4> source;
float ressolution;
float strength;

[numthreads(8,8,1)]
void Normal (uint3 id : SV_DispatchThreadID)
{
	float xLeft, xRight, yUp, yDown, xDelta, yDelta;

	if (id.x == 0)
		xLeft = source[id.xy].r * strength;
	else
		xLeft = source[uint2(id.x - 1, id.y)].r * strength;
	if (id.x == ressolution - 1)
		xRight = source[id.xy].r * strength;
	else
		xRight = source[uint2(id.x + 1 , id.y)].r * strength;
	if (id.y == 0)
		yUp = source[id.xy].r * strength;
	else
		yUp = source[uint2(id.x, id.y - 1)].r * strength;
	if (id.y == ressolution - 1)
		yDown = source[id.xy].r * strength;
	else
		yDown = source[uint2(id.x, id.y + 1)].r* strength;

	xDelta = ((xLeft - xRight) + 1)*0.5;
	yDelta = ((yUp - yDown) + 1)*0.5;

	float4 color = float4(xDelta, yDelta, 1.0, yDelta);
	Result[id.xy] = color;
}
